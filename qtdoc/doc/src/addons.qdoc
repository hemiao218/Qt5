/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\page addons.html
\title Add-ons
\brief Add-on modules to Qt

In addition to the essential Qt modules which are supported on all the platforms
supported by Qt, there is also a set of add-on modules. Platform support for these
modules is optional, but many are still widely supported. Note that, though the
modules are considered optional, they are not necessarily less important than the
essential Qt modules. Some are deprecated APIs available for backwards compatibility,
but others are fundamental modules which may primarily be relevant on a sub-set of the
platforms supported by Qt.

The following are the add-on modules available in the Qt SDK.

\section1 Active Qt Module

The \l {Active Qt} module provides support for ActiveX and COM on Windows platforms.

\section1 Qt Concurrent Module

The \l {Qt Concurrent} module provides APIs to make it simpler and safer to
write multi-threaded code in a structured manner, enabling your
application to better exploit the hardware resources of the platform where it is running.

\list
\li \l{Threading Basics}
\li \l{Thread Support}
\endlist

\target Qt Declarative
\section1 Qt Declarative Module

The Qt Declarative module provides APIs and tools to support code written in Qt Quick 1. For more information, visit the \l{Qt Quick 1} page.

\section1 Qt Graphical Effects Module

The \l {Qt Graphical Effects} module is an extension to \l{Qt Quick} which provides a ready-made set
of shader effects to be used in QML. The module provides graphical effects such as blurring,
colorization, drop shadows, and more.

\section1 Qt Image Formats Module

The \l {Qt Image Formats} module contains plugins that provide support for an extended set of
image formats to Qt applications.

\section1 Qt OpenGL Module

The \l{Qt OpenGL} module is primarily provided for compatibility with Qt 4. The essential
\l{Qt GUI} module provides a set of OpenGL classes which cover most use cases where you want to mix Qt and OpenGL-based code.

\section1 Qt Print Support Module

The \l {Qt Print Support} module provides cross-platform APIs to make printing easy and portable.
Printing with Qt is done by using the same \l {QPainter} APIs which can also be used to
paint on screen or on a \l {QImage}.

\section1 Qt Script Module

The \l {Qt Script} module provides APIs to \l{Making Applications
Scriptable}{make Qt applications scriptable}. This module is primarily provided
for compatibility with Qt 4, and to support applications that use the \l{Qt
Declarative} module. An alternative API is provided by QJSEngine from the
essential \l {Qt QML} module.

For more information, see \l{Scripting Classes and Overviews}.

\section1 Qt SVG Module

Scalable Vector Graphics, or "SVG", is an XML-based format for storing vector-based graphics.
The \l {Qt SVG} module provides APIs to render and save files in the SVG format, and supports
a subset of the SVG 1.2 Tiny standard.

\section1 Qt Tools Module

The \l {Qt Tools} module provides APIs related to the specific tools provided to make development
with Qt easier. In particular there is the \l {Qt UI Tools} module which provides classes to handle
the forms created in Qt Designer and the \l {Qt Help} module which can be used to integrate online
documentation in applications, similar to Qt Assistant.

\section1 Qt XML Module

The \l {Qt XML} Module is provided for compatibility with older code. It has been superseded by
the QXmlStreamReader and QXmlStreamWriter classes in the \l {Qt Core} module.

For more information, read the section "XML Support in Qt" in the \l {Data Storage}
overview.
*/
