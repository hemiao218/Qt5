/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qtexamplesandtutorials.html
    \title Qt Examples And Tutorials
    \brief Explains step by step basic Qt programming

    \section1 Tutorials

    A collection of tutorials and \e walkthrough guides are provided with Qt to
    help new users get started with Qt development. These documents cover a
    range of topics, from basic use of widgets to step-by-step tutorials that
    show how an application is put together.

    \section2 Qt Creator
    Qt Creator is the integrated development environment (IDE) for Qt.
    \list
    \li \l{Qt Creator Manual} - The manual contains
    information on how to achieve development tasks
    These are excerpts from the manual:
        \list
         \li \l{Qt Creator: Tutorials}{Tutorials}
        \li \l{Qt Creator: Creating Projects}{Creating Projects}
        \li \l{Qt Creator: Building and Running}{Building and Running}
        \li \l{Qt Creator: Debugging}{Debugging}
        \endlist
    \endlist

    \section2 Qt Quick Essentials
    Qt Quick and QML features are covered in several tutorials, ranging from
    easy introductions to advanced tutorials that mix QML with C++ and
    JavaScript.
        \list
        \li \l{QML Tutorial}{Hello World} - A very simple QML example that
        demonstrates the basic QML features
        \li \l{Getting Started Programming with Qt Quick}{QML Text Editor} - An
        intermediate QML tutorial that covers many QML features such as states,
        plugins, and C++ development
        \li \l{QML Advanced Tutorial}{SameGame} - A walkthrough of creating a
        simple game using QML for the interface and JavaScript for the game
        logic
        \omit broken links
        \image qml-samegame-demo-small.png Samegame
        \endomit
        \endlist

    \omit
    Omitted for now since the links are broken.
    \section2 Qt WebKit
    \list
    \li \l{QtWebKit Guide} - An introductory guide to the features of QtWebKit
    and HTML5.
        \list
        \li \l{QtWebKit Guide - Level 3 CSS}{CSS Chapter} - Covers what is
        possible with CSS3 and QtWebKit.
        \li \l{Canvas Graphics}{HTML5 Canvas Chapter} - Covers the basics of
        integrating the <canvas> element into web applications.
        \li \l{QtWebKit Guide - Client Storage}{Client Storage Chapter} -
        Describes the basics of storing information on the client side.
        \endlist
    \endlist
    \endomit

    \section2 Qt Essentials
    The basic concepts and technologies in Qt are introduced in these essential
    tutorials.
        \list
        \li \l{Getting Started Programming with Qt Widgets}{Qt Text Editor} - A simple
        tutorial detailing the creation of a basic Qt application
        Introduces the use of slots and signals, file operations, and widgets.
        \li \l{Address Book Tutorial}{Address Book} - A beginner's guide to
        widgets, container classes, and layouts.
        \omit broken links
        \image addressbook-tutorial.png AddressBook
        \endomit
        \li \l{modelview.html}{ModelView} - This tutorial gives an introduction to
        ModelView programming using the Qt cross-platform framework
        \li\l{thread-basics.html}{Threads} - A short tutorial about thread concepts
        in general and basic Qt classes to handle threads
        \endlist

    \section2 Qt Utilities
    \list
    \li \l{Qt Test Tutorial}{Qt Test} - This tutorial gives a short
    introduction to how to use some of the features of Qt's unit-testing
    framework, Qt Test. It is divided into four chapters.
    \li \l{Getting Started}{qmake} - This tutorial teaches you how to use \c
    qmake. We recommend that you read the \l{qmake Manual}{qmake user guide}
    after completing this tutorial.
    \li \l{Qt Linguist Manual: Developers#Tutorials}{Qt Linguist} - A guided
    tour through the translations process, explaining the tools provided for
    developers, translators and release managers.
    \omit broken links
    \image linguist-examples.png Qt Linguist
    \endomit
    \endlist

    \section1 Examples

    Qt includes a set of examples that cover nearly every aspect of Qt
    development. They demonstrate usage of various modules and technologies.

    The examples include a project file and some include documentation.
    Qt Creator can directly run these examples through the Welcome Page.

    The \l{Qt Widget Gallery} also provides overviews of selected Qt
    widgets in each of the styles used on various supported platforms.

    Most examples are provided under the terms of the
    \l{New and Modified BSD Licenses}{Modified BSD License}. Some examples
    are however provided under the terms of the
    \l{GNU Lesser General Public License (LGPL)}{GNU LGPL version 2.1}.

    \annotatedlist all-examples
*/

/*!
   \group all-examples
   \title List of Qt Examples
   \brief Alphabetical listing of Qt Examples
*/

/*!
    \page examples-layouts.html
    \ingroup all-examples
    \title Layout Examples
    \brief Using Qt's layout-based approach to widget management.

    \image layout-examples.png

    Qt uses a layout-based approach to widget management. Widgets are arranged in
    the optimal positions in windows based on simple layout rules, leading to a
    consistent look and feel.

    Custom layouts can be used to provide more control over the positions and
    sizes of child widgets.

    \list
    \li \l{layouts/basiclayouts}{Basic Layouts}\raisedaster
    \li \l{layouts/borderlayout}{Border Layout}
    \li \l{layouts/dynamiclayouts}{Dynamic Layouts}
    \li \l{layouts/flowlayout}{Flow Layout}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \page examples-draganddrop.html
    \ingroup all-examples
    \title Drag and Drop Examples
    \brief How to access your platform's native drag and drop functionality.

    \image draganddrop-examples.png

    Qt supports native drag and drop on all platforms via an extensible
    MIME-based system that enables applications to send data to each other in the
    most appropriate formats.

    Drag and drop can also be implemented for internal use by applications.

    \list
    \li \l{draganddrop/draggableicons}{Draggable Icons}
    \li \l{draganddrop/draggabletext}{Draggable Text}
    \li \l{draganddrop/dropsite}{Drop Site}\raisedaster
    \li \l{draganddrop/fridgemagnets}{Fridge Magnets}\raisedaster
    \li \l{draganddrop/puzzle}{Drag and Drop Puzzle}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/
// This example seems to have disappeared:
//    \li \l{draganddrop/delayedencoding}{Delayed Encoding}\raisedaster


/*!
    \page examples-threadandconcurrent.html
    \ingroup all-examples
    \title Threading and Concurrent Programming Examples
    \brief Threading and concurrent programming in Qt.

    \image thread-examples.png

    Qt makes it easy to write multithreaded applications. Signals and slots can be used
    to safely communicate between threads in your application.
    \omit
    ###Add this explicit list back if the \annotatedlist fails
    \list
    \li \l{threads/queuedcustomtype}{Queued Custom Type}\raisedaster
    \li \l{threads/mandelbrot}{Mandelbrot}\raisedaster
    \li \l{threads/semaphores}{Semaphores}\raisedaster
    \li \l{threads/waitconditions}{Wait Conditions}\raisedaster
    \endlist
    \endomit

    \annotatedlist qtconcurrent-mtexamples

    The QtConcurrent namespace includes a collection of classes and functions
    for straightforward concurrent programming.

    These examples show how to apply the basic techniques of concurrent
    programming to simple problems.
    \omit
    ###Add this explicit list back if the \annotatedlist fails
    \list
    \li \l{qtconcurrent/imagescaling}{QtConcurrent Asynchronous Image Scaling}
    \li \l{qtconcurrent/map}{QtConcurrent Map}
    \li \l{qtconcurrent/progressdialog}{QtConcurrent Progress Dialog}
    \li \l{qtconcurrent/runfunction}{QtConcurrent Run Function}
    \li \l{qtconcurrent/wordcount}{QtConcurrent Word Count}
    \endlist
    \endomit

    \annotatedlist qtconcurrentexamples

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \ingroup all-examples
    \title Tools Examples
    \brief Using Qt's containers, iterators, and other tool classes.
    \group examples-widgets-tools

    \image tool-examples.png

    Qt is equipped with a range of capable tool classes, from containers and
    iterators to classes for string handling and manipulation.

    Other classes provide application infrastructure support, handling plugin
    loading and managing configuration files.

*/

/*!
    \omit
    \group examples-ipc
    \ingroup all-examples
    \title IPC Examples
    \brief Inter-Process Communication with Qt.

    \image ipc-examples.png

    \endomit
*/

/*!
    \page examples-sql.html
    \ingroup all-examples
    \title SQL Examples
    \brief Accessing your SQL database from Qt.

    \image sql-examples.png

    Qt provides extensive database interoperability, with support for products
    from both open source and proprietary vendors.

    SQL support is integrated with Qt's model/view architecture, making it easier
    to provide GUI integration for your database applications.
    \omit
    ###Add this list back if \annotatedlist fails
    \list
     \li \l {Cached Table Example}{Caches Table}
     \li \l {Drill Down Example}{Drill Down}
     \li \l {Master Detail Example}{Master Detail}
     \li \l {Query Model Example}{Query Model}
     \li \l {Relational Table Model Example}{Relational Table}
     \li \l {SQL Browser}
     \li \l {SQL Widget Mapper Example}{SQL Widget Mapper}
     \li \l {Table Model Example}{Table Model}
    \endlist
    \endomit

    \annotatedlist sql_examples

    Examples marked with an asterisk (*) are fully documented.
*/


/*!
    \page examples-xml.html
    \ingroup all-examples
    \title XML Examples
    \brief Using XML with Qt.

    XML parsing and handling is supported through SAX and DOM compliant APIs as well as streaming classes.

    \annotatedlist xml-examples

    \image xml-examples.png XML

    The XQuery/XPath and XML Schema engines in the \l{Qt XML Patterns} module
    provide classes for querying XML files and custom data models.

    \annotatedlist xmlpattern_examples

    Examples marked with an asterisk (*) are fully documented.
*/
/*
###Add these back in to the section above when the examples have documentation

    XML parsing and handling is supported through SAX and DOM compliant APIs
    as well as streaming classes.

    \list
    \li \l{xml/dombookmarks}{DOM Bookmarks}
    \li \l{xml/saxbookmarks}{SAX Bookmarks}
    \li \l{xml/streambookmarks}{QXmlStream Bookmarks}\raisedaster
    \li \l{xml/rsslisting}{RSS-Listing}
    \li \l{xml/xmlstreamlint}{XML Stream Lint Example}\raisedaster
    \li \l{xml/htmlinfo}{XML HTML Info}
    \endlist

    \list
    \li \l{xmlpatterns/recipes}{Recipes}
    \li \l{xmlpatterns/filetree}{File System Example}
    \li \l{xmlpatterns/qobjectxmlmodel}{QObject XML Model Example}
    \li \l{xmlpatterns/xquery/globalVariables}{C++ Source Code Analyzer Example}
    \li \l{xmlpatterns/schema}{XML Schema Validation}\raisedaster
    \endlist

*/

/*!
    \page examples-statemachine.html
    \ingroup all-examples
    \title State Machine Examples
    \brief Using Qt's finite state machine classes.

    Qt provides a powerful hierarchical finite state machine through the Qt State
    Machine classes.

    These examples demonstrate the fundamental aspects of implementing
    Statecharts with Qt.

    \list
    \li \l{statemachine/eventtransitions}{Event Transitions}\raisedaster
    \li \l{statemachine/factorial}{Factorial States}\raisedaster
    \li \l{statemachine/pingpong}{Ping Pong States}\raisedaster
    \li \l{statemachine/rogue}{Rogue}\raisedaster
    \li \l{statemachine/trafficlight}{Traffic Light}\raisedaster
    \li \l{statemachine/twowaybutton}{Two-way Button}\raisedaster
    \endlist
*/

/*!
    \page examples-animation.html
    \ingroup all-examples
    \title Animation Framework Examples
    \brief Doing animations with Qt.

    \image animation-examples.png Animation

    \list
    \li \l{animation/animatedtiles}{Animated Tiles}
    \li \l{animation/appchooser}{Application Chooser}
    \li \l{animation/easing}{Easing Curves}
    \li \l{animation/moveblocks}{Move Blocks}\raisedaster
    \li \l{animation/states}{States}
    \li \l{animation/stickman}{Stick man}\raisedaster
    \li \l{animation/sub-attaq}{Sub-Attaq}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \group touchinputexamples
    \ingroup all-examples
    \title Touch Input Examples
    \brief Using Qt's touch input capability.

    Support for touch input makes it possible for developers to create
    extensible and intuitive user interfaces.
*/

/*!
    \page examples-gestures.html
    \title Gestures Examples
    \brief Gesture programming examples.

    The API of the gesture framework is not yet finalized and
    still subject to change.

    \list
    \li \l{gestures/imagegestures}{Image Gestures}
    \endlist
*/

/*!
    \page examples-dbus.html
    \title D-Bus Examples
    \brief Using D-Bus from Qt applications.
    \ingroup all-examples

    \list
    \li \l{dbus/dbus-chat}{Chat}
    \li \l{dbus/complexpingpong}{Complex Ping Pong}
    \li \l{dbus/listnames}{List Names}
    \li \l{dbus/pingpong}{Ping Pong}
    \li \l{dbus/remotecontrolledcar}{Remote Controlled Car}
    \endlist

    Examples marked with an asterisk (*) are fully documented.
*/

/*!
    \page examples-activeqt.html
    \title ActiveQt Examples
    \brief Using ActiveX from Qt applications.
    \ingroup all-examples

    \image activeqt-examples.png ActiveQt

    \list
    \li \l{activeqt/comapp}{COM App}\raisedaster
    \li \l{Dot Net Example (ActiveQt)}{Dot Net}\raisedaster
    \li \l{activeqt/hierarchy}{Hierarchy}\raisedaster
    \li \l{activeqt/menus}{Menus}\raisedaster
    \li \l{activeqt/multiple}{Multiple}\raisedaster
    \li \l{activeqt/opengl}{OpenGL}\raisedaster
    \li \l{activeqt/qutlook}{Qutlook}\raisedaster
    \li \l{activeqt/simple}{Simple}\raisedaster
    \li \l{activeqt/webbrowser}{Web Browser}\raisedaster
    \li \l{activeqt/wrapper}{Wrapper}\raisedaster
    \endlist
*/
